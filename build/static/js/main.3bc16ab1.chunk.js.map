{"version":3,"sources":["Users/users.js","Profile/Profile.js","Confirm/confirm.js","App.js","serviceWorker.js","index.js"],"names":["Users","jobList","profile","location","company","minexp","maxexp","time","skills","locationList","label","value","expList","state","timeList","locations","exp","selectedJobList","searchByKey","event","searchKey","target","length","templist","forEach","ele","valArr","Object","values","console","log","ele1","String","toLowerCase","includes","push","setState","handleSearch","tempList1","tempList","expArr","split","parseInt","onTimeChange","e","selectedTime","checked","splice","indexOf","applyJob","job","sessionStorage","setItem","JSON","stringify","props","history","this","jobs","map","key","className","src","width","height","style","margin","fontWeight","fontSize","onClick","type","id","onKeyUp","placeholder","flex","inputId","onChange","htmlFor","verticalAlign","options","Component","React","memo","Profile","useState","name","setName","email","setMail","phone","setPhone","terms","setTerms","setJob","resume","setResume","error","setError","useEffect","parse","getItem","onSubmit","preventDefault","marginBottom","files","Confirm","App","routes","path","exact","component","to","Fragment","float","marginTop","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3bc16ab1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './users.css'\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Toolbar } from 'primereact/toolbar';\r\n\r\nclass Users extends Component {\r\n\r\n    jobList = [\r\n        {\r\n            profile: 'Front-end engineer',\r\n            location: 'Bangalore',\r\n            company: 'LetsVenture',\r\n            minexp: 0,\r\n            maxexp: 2,\r\n            time: 'Fulltime',\r\n            skills: 'Angular, React'\r\n        },\r\n        {\r\n            profile: 'Java engineer',\r\n            location: 'Delhi',\r\n            company: 'Google',\r\n            minexp: 2,\r\n            maxexp: 4,\r\n            time: 'Parttime',\r\n            skills: 'Java'\r\n        },\r\n        {\r\n            profile: 'Data-scientist',\r\n            location: 'Kolkata',\r\n            company: 'Amazon',\r\n            minexp: 4,\r\n            maxexp: 6,\r\n            time: 'Freelancer',\r\n            skills: 'python, Big-data'\r\n        }\r\n    ]\r\n\r\n    locationList = [\r\n        { label: 'Bangalore', value: 'Bangalore' },\r\n        { label: 'Kolkata', value: 'Kolkata' },\r\n        { label: 'Pune', value: 'Pune' },\r\n        { label: 'Delhi', value: 'Delhi' },\r\n        { label: 'Chennai', value: 'Chennai' },\r\n        { label: 'Hyderabad', value: 'Hyderabad' }\r\n    ]\r\n\r\n    expList = [\r\n        { label: 'All', value: 'all' },\r\n        { label: '0-2', value: '0-2' },\r\n        { label: '2-4', value: '2-4' },\r\n        { label: '4-6', value: '4-6' },\r\n        { label: '6-8', value: '6-8' },\r\n        { label: '>8', value: '>8' }\r\n    ]\r\n\r\n\r\n    state = {\r\n        timeList: [],\r\n        locations: [],\r\n        exp: [],\r\n        selectedJobList: []\r\n    };\r\n\r\n    searchByKey = (event) => {\r\n        let searchKey = event.target.value\r\n        if (searchKey.length > 0) {\r\n            let templist = [];\r\n\r\n            this.state.selectedJobList.forEach(ele => {\r\n                let valArr = Object.values(ele);\r\n                console.log(valArr)\r\n                valArr.forEach(ele1 => {\r\n                    if (String(ele1).toLowerCase().includes(searchKey)) {\r\n                        templist.push(ele)\r\n                    }\r\n                })\r\n\r\n            })\r\n\r\n            this.setState({ selectedJobList: templist })\r\n        }else{\r\n            this.handleSearch();\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ selectedJobList: [...this.jobList] });\r\n    }\r\n\r\n    handleSearch = () => {\r\n        let tempList1 = [...this.jobList];\r\n        if (this.state.timeList.length > 0) {\r\n            if (this.state.timeList.includes('all')) {\r\n                this.setState({ selectedJobList: [...this.jobList] });\r\n                return;\r\n            }\r\n            let tempList = [];\r\n            tempList1.forEach(ele => {\r\n                this.state.timeList.forEach(ele1 => {\r\n                    if (ele.time.toLowerCase() === ele1.toLowerCase()) {\r\n                        tempList.push(ele)\r\n                    }\r\n                })\r\n            })\r\n            console.log(tempList);\r\n            // this.setState({ selectedJobList: tempList })\r\n            tempList1 = [...tempList]\r\n        }\r\n\r\n        if (this.state.locations.length > 0) {\r\n            let tempList = [];\r\n            tempList1.forEach(ele => {\r\n                this.state.locations.forEach(ele1 => {\r\n                    if (ele.location.toLowerCase() === ele1.toLowerCase()) {\r\n                        tempList.push(ele)\r\n                    }\r\n                })\r\n            })\r\n            console.log(tempList);\r\n            tempList1 = [...tempList]\r\n        }\r\n\r\n        if (this.state.exp.length > 0 && this.state.exp!=='all') {\r\n            let tempList = [];\r\n            let expArr = this.state.exp.split('-');\r\n            console.log(expArr);\r\n\r\n            tempList1.forEach(ele => {\r\n                if (ele.minexp >= parseInt(expArr[0]) && ele.maxexp <= parseInt(expArr[1])) {\r\n                    tempList.push(ele)\r\n                }\r\n\r\n            })\r\n            console.log(tempList);\r\n            tempList1 = [...tempList]\r\n        }\r\n\r\n        this.setState({ selectedJobList: [...tempList1] });\r\n    }\r\n\r\n    onTimeChange = (e) => {\r\n        let selectedTime = [...this.state.timeList];\r\n        if (e.checked)\r\n            selectedTime.push(e.value);\r\n        else\r\n            selectedTime.splice(selectedTime.indexOf(e.value), 1);\r\n\r\n        this.setState({ timeList: selectedTime });\r\n    }\r\n\r\n    applyJob=(job)=>{    \r\n        sessionStorage.setItem('job',JSON.stringify(job));\r\n        this.props.history.push('/userInfo')\r\n    }\r\n\r\n    render() {\r\n        let jobs = this.state.selectedJobList.map(ele =>\r\n            <Toolbar key={ele.profile + '' + ele.location}>\r\n                <div className=\"row\">\r\n                    <img src=\"companylogo.png\" width=\"100px\" height=\"100px\" />\r\n                    <div style={{ margin: '10px', width: '85%' }}>\r\n                        <label style={{ fontWeight: 'bold', fontSize: '15px' }}>{ele.profile}</label>\r\n                        <br />\r\n                        <label>{ele.company}</label> |\r\n                        <label>{ele.location}</label> |\r\n                        <label>{ele.minexp}-{ele.maxexp} years</label>\r\n                        <br />\r\n                        <label>Skills: {ele.skills}</label>\r\n\r\n                    </div>\r\n                    <div> <Button className=\"p-toolbar-group-right\" label=\"Apply\" \r\n                    onClick={()=>this.applyJob(ele)}/></div>\r\n                </div>\r\n            </Toolbar>\r\n\r\n        )\r\n\r\n        return (\r\n            <div style={{ margin: '10px' }}>\r\n                <div >\r\n                    <input type=\"text\" id=\"myInput\" onKeyUp={(event) => this.searchByKey(event)}\r\n                        placeholder=\"Search by keywords..\" />\r\n\r\n                    <div style={{ flex: 6 }}>\r\n                        <div className=\"row\">\r\n                            <div style={{ width: '20%' }}>\r\n                                <Checkbox inputId=\"cb1\" value=\"all\"\r\n                                    onChange={this.onTimeChange}\r\n                                    checked={this.state.timeList.includes('all')}></Checkbox>\r\n                                <label htmlFor=\"cb1\" className=\"p-checkbox-label\">All</label>\r\n                            </div>\r\n                            <div style={{ width: '20%' }}>\r\n                                <Checkbox inputId=\"cb2\" value=\"fulltime\"\r\n                                    onChange={this.onTimeChange}\r\n                                    checked={this.state.timeList.includes('fulltime')}></Checkbox>\r\n                                <label htmlFor=\"cb2\" className=\"p-checkbox-label\">Full-Time</label>\r\n                            </div>\r\n                            <div style={{ width: '20%' }}>\r\n                                <Checkbox inputId=\"cb1\" value=\"parttime\"\r\n                                    onChange={this.onTimeChange}\r\n                                    checked={this.state.timeList.includes('parttime')}></Checkbox>\r\n                                <label htmlFor=\"cb1\" className=\"p-checkbox-label\">Part-Time</label>\r\n                            </div>\r\n                            <div style={{ width: '20%' }}>\r\n                                <Checkbox inputId=\"cb1\" value=\"freelancer\"\r\n                                    onChange={this.onTimeChange}\r\n                                    checked={this.state.timeList.includes('freelancer')}></Checkbox>\r\n                                <label htmlFor=\"cb1\" className=\"p-checkbox-label\">Freelancer</label>\r\n                            </div>\r\n                            <div style={{ width: '20%' }}>\r\n                                <Button label=\"Search\" onClick={this.handleSearch} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div>\r\n                    <h4>Advanced Search</h4>\r\n                    <div className=\"row\">\r\n                        <div style={{ flex: 1 }}>\r\n                            <label style={{ verticalAlign: 'super' }}>Location: </label>\r\n                            <MultiSelect\r\n                                value={this.state.locations}\r\n                                options={this.locationList}\r\n                                placeholder='Filter By Location'\r\n                                onChange={(e) => this.setState({ locations: e.value })}\r\n                            />\r\n                        </div>\r\n                        <div style={{ flex: 1 }}>\r\n                            <label style={{ verticalAlign: 'sub' }}>Experience: </label>\r\n                            <Dropdown value={this.state.exp} options={this.expList}\r\n                                onChange={(e) => { this.setState({ exp: e.value }) }}\r\n                                placeholder=\"Select Experience (in years)\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div>\r\n                    {jobs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default React.memo(Users);","import React, { useState, useEffect } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Button } from 'primereact/button';\r\n\r\nimport './Profile.css'\r\nfunction Profile(props) {\r\n    const [name, setName] = useState('');\r\n    const [email, setMail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [terms, setTerms] = useState(false);\r\n    const [job, setJob]=useState({});\r\n    const [resume,setResume]=useState('')\r\n    const [error,setError] =useState('')\r\n\r\n    const fileSelect = (event) => {\r\n        setResume(event.target.files[0].name);\r\n    }\r\n    const handleCancel=()=>{\r\n        props.history.push('/');\r\n    }\r\n\r\n    const formSubmit=(event)=>{\r\n        if(name.length>0 && email.length>0 && phone.length>0 && resume.length>0){\r\n            if(terms){\r\n                props.history.push('/confirmation')\r\n            }else{\r\n                setError('Please accept terms and conditions');\r\n                event.preventDefault();\r\n            }\r\n        }else{\r\n            setError('Please fill all the feilds');\r\n            event.preventDefault();\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        setJob(JSON.parse(sessionStorage.getItem('job')));    \r\n    },[])\r\n\r\n    return (\r\n        <div className=\"view\">\r\n            <h3>User Information</h3>\r\n            <form onSubmit={formSubmit}>\r\n                <div className=\"row\" style={{ marginBottom: '10px' }}>\r\n                    <div style={{ flex: 2 }}>Name: </div>\r\n                    <div style={{ flex: 8 }}>\r\n                        <InputText style={{ width: '100%' }}\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={{ marginBottom: '10px' }}>\r\n                    <div style={{ flex: 2 }}>Email: </div>\r\n                    <div style={{ flex: 8 }}>\r\n                        <InputText style={{ width: '100%' }}\r\n                            value={email}\r\n                            onChange={(e) => setMail(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={{ marginBottom: '10px' }}>\r\n                    <div style={{ flex: 2 }}>Contact: </div>\r\n                    <div style={{ flex: 8 }}>\r\n                        <InputText style={{ width: '100%' }}\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={{ marginBottom: '10px' }}>\r\n                    <div style={{ flex: 2 }}>Resume: </div>\r\n                    <div style={{ flex: 8 }}>\r\n                        <input type=\"file\" onChange={fileSelect}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={{ marginBottom: '10px' }}>\r\n                    <Checkbox inputId=\"cb1\"\r\n                        onChange={e => setTerms(e.checked)}\r\n                        checked={terms}></Checkbox>\r\n                    <label htmlFor=\"cb1\" className=\"p-checkbox-label\">\r\n                        I agree to {job.company} terms and conditions\r\n                    </label>\r\n                </div>\r\n                <div className=\"row\" style={{ marginBottom: '10px' }}>\r\n                    <Button label=\"Cancel\" onClick={handleCancel} style={{margin:'15px'}}/>\r\n                    <Button label=\"Submit\" type=\"submit\" style={{margin:'15px'}}/>\r\n                </div>\r\n\r\n            </form>\r\n            <p>{error}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {useEffect,useState} from 'react';\r\n\r\nfunction Confirm(){\r\n    const [job,setJob]= useState({});\r\n    useEffect(()=>{\r\n        setJob(JSON.parse(sessionStorage.getItem('job')));\r\n    },[])\r\n    return(\r\n        <div style={{margin:'10px'}}>\r\n            <h3>Confirmation for Application</h3>\r\n            <p>Thanks for applying for {job.profile} job on {job.company}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirm","import React, { Component } from 'react';\nimport Users from \"./Users/users\";\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport Profile from './Profile/Profile'\nimport Confirm from './Confirm/confirm'\nimport './App.css';\nclass App extends Component {\n\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/\" exact component={Users} />\n        <Route path=\"/userInfo\" component={Profile} />\n        <Route path='/confirmation' component={Confirm}/>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    return (\n      <React.Fragment>\n        <nav className=\"Toolbar\">LetsVenture <span style={{float:\"right\"}}>Sign In</span></nav>\n        {/* <div><Users/></div> */}\n        <div style={{ marginTop: '65px' }}>\n          {routes}\n        </div>\n\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter><App /></BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}